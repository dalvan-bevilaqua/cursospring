version: '3'
services:
  postgres:
    #version postgres 9.6.9
    image: postgres
    container_name: "postgres"
    restart: always
    volumes:
      - ./app:/dados/postgree/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: postgres
    ports:
      - 54320:5432
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: "zookeeper"
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: "kafka"
    networks: 
      - broker-kafka
    volumes:
      - /home/dalvan/Desenvolvimento/Docker/Volumes/Kafka:/dados/kafka/
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: "kafdrop"
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
  
  mongo:
    container_name: "mongo"
    image: mongo
    environment:
      MONGO_INITDB_DATABASE: database
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
    ports:
      - "27017:27017"
    volumes:
      - /home/dalvan/Desenvolvimento/Docker/Volumes/MongoDB:/data/db
    networks:
      - broker-kafka

networks: 
  broker-kafka:
    driver: bridge 